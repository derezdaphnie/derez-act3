{"ast":null,"code":"export default {\n  data() {\n    return {\n      searchQuery: '',\n      items: [{\n        name: 'Alibaba',\n        price: 10,\n        image: 'alibaba.jpg'\n      }, {\n        name: 'Boy Bawang',\n        price: 20,\n        image: 'boybawang.jpg'\n      }, {\n        name: 'Cheez-it',\n        price: 15,\n        image: 'cheezit.jpg'\n      }, {\n        name: 'Clover',\n        price: 11,\n        image: 'clover.jpg'\n      }, {\n        name: 'Maruya',\n        price: 32,\n        image: 'maruya.jpg'\n      }, {\n        name: 'Kobi',\n        price: 23,\n        image: 'kobi.jpg'\n      }, {\n        name: 'Lumpia',\n        price: 23,\n        image: 'lumpia.jpg'\n      }, {\n        name: 'Nagaraya',\n        price: 23,\n        image: 'nagaraya.jpg'\n      }, {\n        name: 'Piattos',\n        price: 23,\n        image: 'piatos.jpg'\n      }, {\n        name: 'Tomi',\n        price: 23,\n        image: 'tomi.jpg'\n      }]\n    };\n  },\n  computed: {\n    filteredItems() {\n      return this.items.filter(item => item.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  methods: {\n    addToCart(item) {\n      this.$emit('add-to-cart', item);\n    },\n    updateItem(index) {\n      const item = this.items[index];\n      const newName = prompt('Enter the new name:', item.name);\n      const newPrice = parseFloat(prompt('Enter the new price:', item.price));\n      if (newName && !isNaN(newPrice)) {\n        item.name = newName;\n        item.price = newPrice;\n      }\n    },\n    removeItem(index) {\n      this.items.splice(index, 1);\n    },\n    getImagePath(image) {\n      return `/img/${image}`;\n    }\n  }\n};","map":{"version":3,"names":["data","searchQuery","items","name","price","image","computed","filteredItems","filter","item","toLowerCase","includes","methods","addToCart","$emit","updateItem","index","newName","prompt","newPrice","parseFloat","isNaN","removeItem","splice","getImagePath"],"sources":["C:\\shoplist\\src\\components\\itemList.vue"],"sourcesContent":["<template>\r\n  <div class=\"item-list\">\r\n    <div v-for=\"(item, index) in filteredItems\" :key=\"index\" class=\"item\">\r\n      <div class=\"item-details\">\r\n        <div class=\"item-info\">\r\n          <img :src=\"getImagePath(item.image)\" alt=\"Item Image\" class=\"item-image\">\r\n          <div>\r\n            <p class=\"item-name\">{{ item.name }}</p>\r\n            <p class=\"item-price\">Php {{ item.price }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"button-group\">\r\n        <button @click=\"addToCart(item)\" class=\"add-to-cart-btn\">Add to Cart</button>\r\n        <button @click=\"updateItem(index)\" class=\"update-btn\">Update</button>\r\n        <button @click=\"removeItem(index)\" class=\"remove-btn\">Remove</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      items: [\r\n        { name: 'Alibaba', price: 10, image: 'alibaba.jpg' },\r\n        { name: 'Boy Bawang', price: 20, image: 'boybawang.jpg' },\r\n        { name: 'Cheez-it', price: 15, image: 'cheezit.jpg' },\r\n        { name: 'Clover', price: 11, image: 'clover.jpg' },\r\n        { name: 'Maruya', price: 32, image: 'maruya.jpg' },\r\n        { name: 'Kobi', price: 23, image: 'kobi.jpg' },\r\n        { name: 'Lumpia', price: 23, image: 'lumpia.jpg' },\r\n        { name: 'Nagaraya', price: 23, image: 'nagaraya.jpg' },\r\n        { name: 'Piattos', price: 23, image: 'piatos.jpg' },\r\n        { name: 'Tomi', price: 23, image: 'tomi.jpg' }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    filteredItems() {\r\n      return this.items.filter(item =>\r\n        item.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    addToCart(item) {\r\n      this.$emit('add-to-cart', item);\r\n    },\r\n    updateItem(index) {\r\n      const item = this.items[index];\r\n      const newName = prompt('Enter the new name:', item.name);\r\n      const newPrice = parseFloat(prompt('Enter the new price:', item.price));\r\n      \r\n      if (newName && !isNaN(newPrice)) {\r\n        item.name = newName;\r\n        item.price = newPrice;\r\n      }\r\n    },\r\n    removeItem(index) {\r\n      this.items.splice(index, 1);\r\n    },\r\n    getImagePath(image) {\r\n      return `/img/${image}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.item-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  width: 80%;\r\n}\r\n\r\n.item-details {\r\n  flex: 1;\r\n}\r\n\r\n.item-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.item-image {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.item-name {\r\n  margin: 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.item-price {\r\n  margin: 0;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.add-to-cart-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.add-to-cart-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.update-btn {\r\n  background-color: #fdd835; /* Yellow color */\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.update-btn:hover {\r\n  background-color: #fbc02d; /* Darker yellow color on hover */\r\n}\r\n\r\n.remove-btn {\r\n  background-color: #f44336; /* Red color */\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.remove-btn:hover {\r\n  background-color: #d32f2f; /* Darker red color on hover */\r\n}\r\n\r\n.search-input {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAsBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAc,CAAC,EACpD;QAAEF,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAgB,CAAC,EACzD;QAAEF,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAc,CAAC,EACrD;QAAEF,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAa,CAAC,EAClD;QAAEF,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAa,CAAC,EAClD;QAAEF,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAW,CAAC,EAC9C;QAAEF,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAa,CAAC,EAClD;QAAEF,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAe,CAAC,EACtD;QAAEF,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAa,CAAC,EACnD;QAAEF,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAW;IAEjD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACL,KAAK,CAACM,MAAM,CAACC,IAAG,IAC1BA,IAAI,CAACN,IAAI,CAACO,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACV,WAAW,CAACS,WAAW,CAAC,CAAC,CACjE,CAAC;IACH;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,SAASA,CAACJ,IAAI,EAAE;MACd,IAAI,CAACK,KAAK,CAAC,aAAa,EAAEL,IAAI,CAAC;IACjC,CAAC;IACDM,UAAUA,CAACC,KAAK,EAAE;MAChB,MAAMP,IAAG,GAAI,IAAI,CAACP,KAAK,CAACc,KAAK,CAAC;MAC9B,MAAMC,OAAM,GAAIC,MAAM,CAAC,qBAAqB,EAAET,IAAI,CAACN,IAAI,CAAC;MACxD,MAAMgB,QAAO,GAAIC,UAAU,CAACF,MAAM,CAAC,sBAAsB,EAAET,IAAI,CAACL,KAAK,CAAC,CAAC;MAEvE,IAAIa,OAAM,IAAK,CAACI,KAAK,CAACF,QAAQ,CAAC,EAAE;QAC/BV,IAAI,CAACN,IAAG,GAAIc,OAAO;QACnBR,IAAI,CAACL,KAAI,GAAIe,QAAQ;MACvB;IACF,CAAC;IACDG,UAAUA,CAACN,KAAK,EAAE;MAChB,IAAI,CAACd,KAAK,CAACqB,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC;IACDQ,YAAYA,CAACnB,KAAK,EAAE;MAClB,OAAQ,QAAOA,KAAM,EAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}